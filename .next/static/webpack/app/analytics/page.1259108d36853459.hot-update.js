"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/analytics/page",{

/***/ "(app-pages-browser)/./components/D3Chart.tsx":
/*!********************************!*\
  !*** ./components/D3Chart.tsx ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ \"(app-pages-browser)/./node_modules/d3/src/index.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nconst D3Chart = /*#__PURE__*/ _s((0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(_c = _s((param, ref)=>{\n    let { data, height = 400, title, chartType = \"line\", onDataPointClick } = param;\n    _s();\n    const svgRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [containerWidth, setContainerWidth] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(800);\n    const [tooltip, setTooltip] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        show: false,\n        x: 0,\n        y: 0,\n        content: \"\"\n    });\n    // Responsive width\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!containerRef.current) return;\n        setContainerWidth(containerRef.current.offsetWidth);\n        const resizeObserver = new window.ResizeObserver((entries)=>{\n            if (!Array.isArray(entries)) return;\n            if (!entries.length) return;\n            setContainerWidth(entries[0].contentRect.width);\n        });\n        resizeObserver.observe(containerRef.current);\n        return ()=>resizeObserver.disconnect();\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!data || data.length === 0 || !svgRef.current || !containerRef.current) return;\n        d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).selectAll(\"*\").remove();\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current);\n        const margin = {\n            top: 20,\n            right: 30,\n            bottom: 50,\n            left: 60\n        };\n        const chartWidth = containerWidth - margin.left - margin.right;\n        const chartHeight = height - margin.top - margin.bottom;\n        svg.attr(\"width\", containerWidth).attr(\"height\", height);\n        const g = svg.append(\"g\").attr(\"transform\", \"translate(\".concat(margin.left, \",\").concat(margin.top, \")\"));\n        const parseDate = d3__WEBPACK_IMPORTED_MODULE_2__.timeParse(\"%Y-%m-%d\");\n        const chartData = data.map((d)=>({\n                ...d,\n                date: parseDate(d.date) || new Date(d.date)\n            }));\n        const xScale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleTime().domain(d3__WEBPACK_IMPORTED_MODULE_2__.extent(chartData, (d)=>d.date)).range([\n            0,\n            chartWidth\n        ]);\n        const yScale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleLinear().domain([\n            0,\n            d3__WEBPACK_IMPORTED_MODULE_2__.max(chartData, (d)=>d.value) || 0\n        ]).range([\n            chartHeight,\n            0\n        ]);\n        if (chartType === \"line\") {\n            const line = d3__WEBPACK_IMPORTED_MODULE_2__.line().x((d)=>xScale(d.date)).y((d)=>yScale(d.value)).curve(d3__WEBPACK_IMPORTED_MODULE_2__.curveMonotoneX);\n            const gradient = svg.append(\"defs\").append(\"linearGradient\").attr(\"id\", \"line-gradient\").attr(\"gradientUnits\", \"userSpaceOnUse\").attr(\"x1\", 0).attr(\"y1\", yScale(d3__WEBPACK_IMPORTED_MODULE_2__.max(chartData, (d)=>d.value) || 0)).attr(\"x2\", 0).attr(\"y2\", yScale(0));\n            gradient.append(\"stop\").attr(\"offset\", \"0%\").attr(\"stop-color\", \"#7c3aed\").attr(\"stop-opacity\", 0.3);\n            gradient.append(\"stop\").attr(\"offset\", \"100%\").attr(\"stop-color\", \"#7c3aed\").attr(\"stop-opacity\", 0.1);\n            const area = d3__WEBPACK_IMPORTED_MODULE_2__.area().x((d)=>xScale(d.date)).y0(chartHeight).y1((d)=>yScale(d.value)).curve(d3__WEBPACK_IMPORTED_MODULE_2__.curveMonotoneX);\n            // Animate area\n            const areaPath = g.append(\"path\").datum(chartData).attr(\"fill\", \"url(#line-gradient)\").attr(\"d\", area).attr(\"opacity\", 0);\n            areaPath.transition().duration(800).attr(\"opacity\", 1);\n            // Animate line\n            const linePath = g.append(\"path\").datum(chartData).attr(\"fill\", \"none\").attr(\"stroke\", \"#7c3aed\").attr(\"stroke-width\", 3).attr(\"d\", line);\n            const totalLength = linePath.node().getTotalLength();\n            linePath.attr(\"stroke-dasharray\", totalLength + \" \" + totalLength).attr(\"stroke-dashoffset\", totalLength).transition().duration(900).ease(d3__WEBPACK_IMPORTED_MODULE_2__.easeCubic).attr(\"stroke-dashoffset\", 0);\n            // Animate dots\n            const dots = g.selectAll(\".dot\").data(chartData).enter().append(\"circle\").attr(\"class\", \"dot\").attr(\"cx\", (d)=>xScale(d.date)).attr(\"cy\", (d)=>yScale(d.value)).attr(\"r\", 0).attr(\"fill\", \"#7c3aed\").attr(\"stroke\", \"white\").attr(\"stroke-width\", 2).style(\"cursor\", \"pointer\");\n            dots.transition().duration(600).delay((_, i)=>i * 30).attr(\"r\", 6);\n            // Interactivity: vertical guide line and animated tooltip\n            dots.on(\"mouseover\", function(event, d) {\n                d3__WEBPACK_IMPORTED_MODULE_2__.select(this).transition().duration(200).attr(\"r\", 8).attr(\"fill\", \"#6d28d9\");\n                // Draw vertical guide line\n                g.append(\"line\").attr(\"class\", \"line-guide\").attr(\"x1\", xScale(d.date)).attr(\"x2\", xScale(d.date)).attr(\"y1\", 0).attr(\"y2\", chartHeight).attr(\"stroke\", \"#a78bfa\").attr(\"stroke-width\", 2).attr(\"stroke-dasharray\", \"4,2\").attr(\"opacity\", 0.5);\n                const formatDate = d3__WEBPACK_IMPORTED_MODULE_2__.timeFormat(\"%B %d, %Y\");\n                const formatValue = d3__WEBPACK_IMPORTED_MODULE_2__.format(\",.0f\");\n                if (containerRef.current) {\n                    const containerRect = containerRef.current.getBoundingClientRect();\n                    const x = event.clientX - containerRect.left;\n                    const y = event.clientY - containerRect.top;\n                    setTooltip({\n                        show: true,\n                        x,\n                        y,\n                        content: \"\".concat(formatDate(d.date), \"<br/>Value: \").concat(formatValue(d.value))\n                    });\n                }\n            }).on(\"mousemove\", function(event, d) {\n                if (containerRef.current) {\n                    const containerRect = containerRef.current.getBoundingClientRect();\n                    const x = event.clientX - containerRect.left;\n                    const y = event.clientY - containerRect.top;\n                    setTooltip((prev)=>({\n                            ...prev,\n                            x,\n                            y\n                        }));\n                }\n            }).on(\"mouseout\", function() {\n                d3__WEBPACK_IMPORTED_MODULE_2__.select(this).transition().duration(200).attr(\"r\", 6).attr(\"fill\", \"#7c3aed\");\n                g.selectAll(\".line-guide\").remove();\n                setTooltip((prev)=>({\n                        ...prev,\n                        show: false\n                    }));\n            }).on(\"click\", function(event, d) {\n                if (onDataPointClick) {\n                    onDataPointClick({\n                        date: d.date.toISOString().split(\"T\")[0],\n                        value: d.value,\n                        category: d.category\n                    });\n                }\n            });\n        } else if (chartType === \"bar\") {\n            // Use a band scale for bars\n            const xBand = d3__WEBPACK_IMPORTED_MODULE_2__.scaleBand().domain(chartData.map((d)=>d.date)).range([\n                0,\n                chartWidth\n            ]).padding(0.2);\n            // Draw bars\n            const bars = g.selectAll(\".bar\").data(chartData).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", (d)=>xBand(d.date)).attr(\"y\", chartHeight).attr(\"width\", xBand.bandwidth()).attr(\"height\", 0).attr(\"fill\", \"#7c3aed\").style(\"cursor\", \"pointer\");\n            // Animate bars\n            bars.transition().duration(800).attr(\"y\", (d)=>yScale(d.value)).attr(\"height\", (d)=>chartHeight - yScale(d.value)).delay((_, i)=>i * 30);\n            // Add interactivity\n            bars.on(\"mouseover\", function(event, d) {\n                d3__WEBPACK_IMPORTED_MODULE_2__.select(this).transition().duration(200).attr(\"fill\", \"#6d28d9\");\n                // Draw vertical guide line\n                g.append(\"line\").attr(\"class\", \"bar-guide\").attr(\"x1\", xBand(d.date) + xBand.bandwidth() / 2).attr(\"x2\", xBand(d.date) + xBand.bandwidth() / 2).attr(\"y1\", 0).attr(\"y2\", chartHeight).attr(\"stroke\", \"#a78bfa\").attr(\"stroke-width\", 2).attr(\"stroke-dasharray\", \"4,2\").attr(\"opacity\", 0.5);\n                const formatDate = d3__WEBPACK_IMPORTED_MODULE_2__.timeFormat(\"%B %d, %Y\");\n                const formatValue = d3__WEBPACK_IMPORTED_MODULE_2__.format(\",.0f\");\n                if (containerRef.current) {\n                    const containerRect = containerRef.current.getBoundingClientRect();\n                    const x = event.clientX - containerRect.left;\n                    const y = event.clientY - containerRect.top;\n                    setTooltip({\n                        show: true,\n                        x,\n                        y,\n                        content: \"\".concat(formatDate(d.date), \"<br/>Value: \").concat(formatValue(d.value))\n                    });\n                }\n            }).on(\"mousemove\", function(event, d) {\n                if (containerRef.current) {\n                    const containerRect = containerRef.current.getBoundingClientRect();\n                    const x = event.clientX - containerRect.left;\n                    const y = event.clientY - containerRect.top;\n                    setTooltip((prev)=>({\n                            ...prev,\n                            x,\n                            y\n                        }));\n                }\n            }).on(\"mouseout\", function() {\n                d3__WEBPACK_IMPORTED_MODULE_2__.select(this).transition().duration(200).attr(\"fill\", \"#7c3aed\");\n                g.selectAll(\".bar-guide\").remove();\n                setTooltip((prev)=>({\n                        ...prev,\n                        show: false\n                    }));\n            }).on(\"click\", function(event, d) {\n                if (onDataPointClick) {\n                    onDataPointClick({\n                        date: d.date.toISOString().split(\"T\")[0],\n                        value: d.value,\n                        category: d.category\n                    });\n                }\n            });\n            // Adjust xAxis for band scale\n            const xAxis = d3__WEBPACK_IMPORTED_MODULE_2__.axisBottom(xBand).tickFormat((date, _i)=>d3__WEBPACK_IMPORTED_MODULE_2__.timeFormat(\"%b %d\")(date));\n            g.append(\"g\").attr(\"transform\", \"translate(0,\".concat(chartHeight, \")\")).call(xAxis).selectAll(\"text\").style(\"text-anchor\", \"end\").attr(\"dx\", \"-.8em\").attr(\"dy\", \".15em\").attr(\"transform\", \"rotate(-45)\");\n            // yAxis remains the same\n            const yAxis = d3__WEBPACK_IMPORTED_MODULE_2__.axisLeft(yScale).tickFormat((d, _i)=>d3__WEBPACK_IMPORTED_MODULE_2__.format(\",.0f\")(d));\n            g.append(\"g\").call(yAxis);\n            // Grid lines\n            g.append(\"g\").attr(\"class\", \"grid\").attr(\"transform\", \"translate(0,\".concat(chartHeight, \")\")).call(d3__WEBPACK_IMPORTED_MODULE_2__.axisBottom(xBand).tickSize(-chartHeight).tickFormat(()=>\"\")).style(\"stroke-dasharray\", \"3,3\").style(\"opacity\", 0.1);\n            g.append(\"g\").attr(\"class\", \"grid\").call(d3__WEBPACK_IMPORTED_MODULE_2__.axisLeft(yScale).tickSize(-chartWidth).tickFormat(()=>\"\")).style(\"stroke-dasharray\", \"3,3\").style(\"opacity\", 0.1);\n        }\n    }, [\n        data,\n        height,\n        containerWidth,\n        chartType\n    ]);\n    // Download PNG logic\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(ref, ()=>({\n            downloadPng: ()=>{\n                if (!svgRef.current) return;\n                const svg = svgRef.current;\n                const serializer = new XMLSerializer();\n                const svgString = serializer.serializeToString(svg);\n                const canvas = document.createElement(\"canvas\");\n                canvas.width = svg.width.baseVal.value;\n                canvas.height = svg.height.baseVal.value;\n                const ctx = canvas.getContext(\"2d\");\n                const img = new window.Image();\n                const svgBlob = new Blob([\n                    svgString\n                ], {\n                    type: \"image/svg+xml;charset=utf-8\"\n                });\n                const url = URL.createObjectURL(svgBlob);\n                img.onload = function() {\n                    ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(img, 0, 0);\n                    URL.revokeObjectURL(url);\n                    canvas.toBlob((blob)=>{\n                        if (!blob) return;\n                        const a = document.createElement(\"a\");\n                        a.href = URL.createObjectURL(blob);\n                        a.download = \"\".concat(title || \"chart\", \".png\");\n                        a.click();\n                    }, \"image/png\");\n                };\n                img.src = url;\n            }\n        }), [\n        title\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"card\",\n        children: [\n            title && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                className: \"text-lg font-semibold text-gray-900 mb-4\",\n                children: title\n            }, void 0, false, {\n                fileName: \"/Users/johndelatorre-ugarte/Documents/brandu-test-app/components/D3Chart.tsx\",\n                lineNumber: 264,\n                columnNumber: 11\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: containerRef,\n                className: \"w-full relative\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        ref: svgRef,\n                        className: \"w-full h-auto\"\n                    }, void 0, false, {\n                        fileName: \"/Users/johndelatorre-ugarte/Documents/brandu-test-app/components/D3Chart.tsx\",\n                        lineNumber: 267,\n                        columnNumber: 11\n                    }, undefined),\n                    tooltip.show && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"absolute bg-gray-900 text-white px-3 py-2 rounded-lg text-sm pointer-events-none z-50 transition-opacity duration-200 \".concat(tooltip.show ? \"opacity-100\" : \"opacity-0\"),\n                        style: {\n                            left: tooltip.x,\n                            top: tooltip.y,\n                            transform: \"translate(-50%, -120%)\"\n                        },\n                        dangerouslySetInnerHTML: {\n                            __html: tooltip.content\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/johndelatorre-ugarte/Documents/brandu-test-app/components/D3Chart.tsx\",\n                        lineNumber: 273,\n                        columnNumber: 13\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/johndelatorre-ugarte/Documents/brandu-test-app/components/D3Chart.tsx\",\n                lineNumber: 266,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/johndelatorre-ugarte/Documents/brandu-test-app/components/D3Chart.tsx\",\n        lineNumber: 262,\n        columnNumber: 7\n    }, undefined);\n}, \"a6Rmetqmh9qlEttoigdghXt2Gq8=\")), \"a6Rmetqmh9qlEttoigdghXt2Gq8=\");\n_c1 = D3Chart;\n/* harmony default export */ __webpack_exports__[\"default\"] = (D3Chart);\nvar _c, _c1;\n$RefreshReg$(_c, \"D3Chart$forwardRef\");\n$RefreshReg$(_c1, \"D3Chart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/D3Chart.tsx\n"));

/***/ })

});